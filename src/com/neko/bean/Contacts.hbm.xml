<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
    Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping>
    <class name="com.neko.bean.Contacts" table="Contacts" schema="dbo" catalog="SourceManager">
        <cache usage="read-write" />
        <id name="id" type="java.lang.Integer">
            <column name="id" />
            <generator class="native" />
        </id>
        <many-to-one name="attachments" class="com.neko.bean.Attachments" fetch="join">
            <column name="contactPhotoId" />
        </many-to-one>
        <many-to-one name="users" class="com.neko.bean.Users" fetch="join" lazy="false">
            <column name="userId" not-null="true" />
        </many-to-one>
        <many-to-one name="contactTypes" class="com.neko.bean.ContactTypes" fetch="join" lazy="false">
            <column name="contactTypeId" />
        </many-to-one>
        <property name="name" type="java.lang.String">
            <column name="name" />
        </property>
        <property name="email" type="java.lang.String">
            <column name="email" />
        </property>
        <property name="address" type="java.lang.String">
            <column name="address" />
        </property>
        <property name="mobilePhone" type="java.lang.String">
            <column name="mobilePhone" />
        </property>
        <property name="telephone" type="java.lang.String">
            <column name="telephone" />
        </property>
        <property name="createTime" type="java.sql.Timestamp">
            <column name="createTime" length="23" />
        </property>
        <property name="lastModifyTime" type="java.sql.Timestamp">
            <column name="lastModifyTime" length="23" />
        </property>
        <property name="otherInfo" type="java.lang.String">
            <column name="otherInfo" />
        </property>
        <property name="description" type="java.lang.String">
            <column name="description" />
        </property>
    </class>
</hibernate-mapping>
